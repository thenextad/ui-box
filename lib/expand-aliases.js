"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = expandAliases;

var _enhancers = require("./enhancers");

/**
 * Expands aliases like `margin` to `marginTop`, `marginBottom`, `marginLeft` and `marginRight`.
 *
 * This prevents edge cases where longhand properties can't override shorthand
 * properties due to the style insertion order.
 */
function expandAliases(props) {
  var propNames = Object.keys(props); // Use a Map because it's faster for setting values and looping over than an Object

  var newProps = new Map();

  for (var i = 0; i < propNames.length; i++) {
    var propName = propNames[i];
    var propValue = props[propName];
    var aliases = _enhancers.propAliases[propName] || [propName]; // Check that the alias has a valid value in development

    if (process.env.NODE_ENV !== 'production') {
      var validator = _enhancers.propValidators[propName];

      if (validator) {
        var result = validator(propValue);

        if (result) {
          throw new Error("\uD83D\uDCE6 ui-box: ".concat(result));
        }
      }
    } // Expand aliases


    for (var _i = 0; _i < aliases.length; _i++) {
      newProps.set(aliases[_i], propValue);
    }
  }

  return newProps;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9leHBhbmQtYWxpYXNlcy5qcyJdLCJuYW1lcyI6WyJleHBhbmRBbGlhc2VzIiwicHJvcHMiLCJwcm9wTmFtZXMiLCJPYmplY3QiLCJrZXlzIiwibmV3UHJvcHMiLCJNYXAiLCJpIiwibGVuZ3RoIiwicHJvcE5hbWUiLCJwcm9wVmFsdWUiLCJhbGlhc2VzIiwicHJvcEFsaWFzZXMiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJ2YWxpZGF0b3IiLCJwcm9wVmFsaWRhdG9ycyIsInJlc3VsdCIsIkVycm9yIiwic2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7Ozs7OztBQU1lLFNBQVNBLGFBQVQsQ0FBdUJDLEtBQXZCLEVBQThCO0FBQzNDLE1BQU1DLFNBQVMsR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlILEtBQVosQ0FBbEIsQ0FEMkMsQ0FFM0M7O0FBQ0EsTUFBTUksUUFBUSxHQUFHLElBQUlDLEdBQUosRUFBakI7O0FBRUEsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHTCxTQUFTLENBQUNNLE1BQTlCLEVBQXNDRCxDQUFDLEVBQXZDLEVBQTJDO0FBQ3pDLFFBQU1FLFFBQVEsR0FBR1AsU0FBUyxDQUFDSyxDQUFELENBQTFCO0FBQ0EsUUFBTUcsU0FBUyxHQUFHVCxLQUFLLENBQUNRLFFBQUQsQ0FBdkI7QUFDQSxRQUFNRSxPQUFPLEdBQUdDLHVCQUFZSCxRQUFaLEtBQXlCLENBQUNBLFFBQUQsQ0FBekMsQ0FIeUMsQ0FLekM7O0FBQ0EsUUFBSUksT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkM7QUFDekMsVUFBTUMsU0FBUyxHQUFHQywwQkFBZVIsUUFBZixDQUFsQjs7QUFDQSxVQUFJTyxTQUFKLEVBQWU7QUFDYixZQUFNRSxNQUFNLEdBQUdGLFNBQVMsQ0FBQ04sU0FBRCxDQUF4Qjs7QUFDQSxZQUFJUSxNQUFKLEVBQVk7QUFDVixnQkFBTSxJQUFJQyxLQUFKLGdDQUF3QkQsTUFBeEIsRUFBTjtBQUNEO0FBQ0Y7QUFDRixLQWR3QyxDQWdCekM7OztBQUNBLFNBQUssSUFBSVgsRUFBQyxHQUFHLENBQWIsRUFBZ0JBLEVBQUMsR0FBR0ksT0FBTyxDQUFDSCxNQUE1QixFQUFvQ0QsRUFBQyxFQUFyQyxFQUF5QztBQUN2Q0YsTUFBQUEsUUFBUSxDQUFDZSxHQUFULENBQWFULE9BQU8sQ0FBQ0osRUFBRCxDQUFwQixFQUF5QkcsU0FBekI7QUFDRDtBQUNGOztBQUVELFNBQU9MLFFBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cHJvcEFsaWFzZXMsIHByb3BWYWxpZGF0b3JzfSBmcm9tICcuL2VuaGFuY2VycydcblxuLyoqXG4gKiBFeHBhbmRzIGFsaWFzZXMgbGlrZSBgbWFyZ2luYCB0byBgbWFyZ2luVG9wYCwgYG1hcmdpbkJvdHRvbWAsIGBtYXJnaW5MZWZ0YCBhbmQgYG1hcmdpblJpZ2h0YC5cbiAqXG4gKiBUaGlzIHByZXZlbnRzIGVkZ2UgY2FzZXMgd2hlcmUgbG9uZ2hhbmQgcHJvcGVydGllcyBjYW4ndCBvdmVycmlkZSBzaG9ydGhhbmRcbiAqIHByb3BlcnRpZXMgZHVlIHRvIHRoZSBzdHlsZSBpbnNlcnRpb24gb3JkZXIuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGV4cGFuZEFsaWFzZXMocHJvcHMpIHtcbiAgY29uc3QgcHJvcE5hbWVzID0gT2JqZWN0LmtleXMocHJvcHMpXG4gIC8vIFVzZSBhIE1hcCBiZWNhdXNlIGl0J3MgZmFzdGVyIGZvciBzZXR0aW5nIHZhbHVlcyBhbmQgbG9vcGluZyBvdmVyIHRoYW4gYW4gT2JqZWN0XG4gIGNvbnN0IG5ld1Byb3BzID0gbmV3IE1hcCgpXG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcm9wTmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBwcm9wTmFtZSA9IHByb3BOYW1lc1tpXVxuICAgIGNvbnN0IHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXVxuICAgIGNvbnN0IGFsaWFzZXMgPSBwcm9wQWxpYXNlc1twcm9wTmFtZV0gfHwgW3Byb3BOYW1lXVxuXG4gICAgLy8gQ2hlY2sgdGhhdCB0aGUgYWxpYXMgaGFzIGEgdmFsaWQgdmFsdWUgaW4gZGV2ZWxvcG1lbnRcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgY29uc3QgdmFsaWRhdG9yID0gcHJvcFZhbGlkYXRvcnNbcHJvcE5hbWVdXG4gICAgICBpZiAodmFsaWRhdG9yKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHZhbGlkYXRvcihwcm9wVmFsdWUpXG4gICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYPCfk6YgdWktYm94OiAke3Jlc3VsdH1gKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRXhwYW5kIGFsaWFzZXNcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsaWFzZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIG5ld1Byb3BzLnNldChhbGlhc2VzW2ldLCBwcm9wVmFsdWUpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld1Byb3BzXG59XG4iXX0=