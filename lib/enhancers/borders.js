"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _getCss = _interopRequireDefault(require("../get-css"));

var _regex = require("../utils/regex");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  border: _propTypes.default.string,
  borderBottom: _propTypes.default.string,
  borderBottomColor: _propTypes.default.string,
  borderBottomStyle: _propTypes.default.string,
  borderBottomWidth: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  borderColor: _propTypes.default.string,
  borderLeft: _propTypes.default.string,
  borderLeftColor: _propTypes.default.string,
  borderLeftStyle: _propTypes.default.string,
  borderLeftWidth: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  borderRight: _propTypes.default.string,
  borderRightColor: _propTypes.default.string,
  borderRightStyle: _propTypes.default.string,
  borderRightWidth: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  borderStyle: _propTypes.default.string,
  borderTop: _propTypes.default.string,
  borderTopColor: _propTypes.default.string,
  borderTopStyle: _propTypes.default.string,
  borderTopWidth: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  borderWidth: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
};
exports.propTypes = propTypes;
var propAliases = {
  border: ['borderBottom', 'borderLeft', 'borderRight', 'borderTop'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth']
};
exports.propAliases = propAliases;
var propValidators = {};
exports.propValidators = propValidators;

if (process.env.NODE_ENV !== 'production') {
  propValidators.borderColor = function (value) {
    if (_regex.spacesOutsideParentheses.test(value)) {
      return "multiple values (\u201C".concat(value, "\u201D) aren\u055At supported with \u201CborderColor\u201D. Use \u201CborderBottomColor\u201D, \u201CborderLeftColor\u201D \u201CborderRightColor\u201D and \u201CborderTopColor\u201D instead.");
    }
  };

  propValidators.borderStyle = function (value) {
    if (_regex.spacesOutsideParentheses.test(value)) {
      return "multiple values (\u201C".concat(value, "\u201D) aren\u055At supported with \u201CborderStyle\u201D. Use \u201CborderBottomStyle\u201D, \u201CborderLeftStyle\u201D \u201CborderRightStyle\u201D and \u201CborderTopStyle\u201D instead.");
    }
  };

  propValidators.borderWidth = function (value) {
    if (_regex.spacesOutsideParentheses.test(value)) {
      return "multiple values (\u201C".concat(value, "\u201D) aren\u055At supported with \u201CborderWidth\u201D. Use \u201CborderBottomWidth\u201D, \u201CborderLeftWidth\u201D \u201CborderRightWidth\u201D and \u201CborderTopWidth\u201D instead.");
    }
  };
}

var _borderLeft = {
  className: 'b-lft',
  cssName: 'border-left',
  jsName: 'borderLeft'
};
var _borderLeftColor = {
  className: 'b-lft-clr',
  cssName: 'border-left-color',
  jsName: 'borderLeftColor'
};
var _borderLeftStyle = {
  className: 'b-lft-stl',
  cssName: 'border-left-style',
  jsName: 'borderLeftStyle',
  safeValue: true
};
var _borderLeftWidth = {
  className: 'b-lft-wdt',
  cssName: 'border-left-width',
  jsName: 'borderLeftWidth'
};
var _borderRight = {
  className: 'b-rgt',
  cssName: 'border-right',
  jsName: 'borderRight'
};
var _borderRightColor = {
  className: 'b-rgt-clr',
  cssName: 'border-right-color',
  jsName: 'borderRightColor'
};
var _borderRightStyle = {
  className: 'b-rgt-stl',
  cssName: 'border-right-style',
  jsName: 'borderRightStyle',
  safeValue: true
};
var _borderRightWidth = {
  className: 'b-rgt-wdt',
  cssName: 'border-right-width',
  jsName: 'borderRightWidth'
};
var _borderTop = {
  className: 'b-top',
  cssName: 'border-top',
  jsName: 'borderTop'
};
var _borderTopColor = {
  className: 'b-top-clr',
  cssName: 'border-top-color',
  jsName: 'borderTopColor'
};
var _borderTopStyle = {
  className: 'b-top-stl',
  cssName: 'border-top-style',
  jsName: 'borderTopStyle',
  safeValue: true
};
var _borderTopWidth = {
  className: 'b-top-wdt',
  cssName: 'border-top-width',
  jsName: 'borderTopWidth'
};
var _borderBottom = {
  className: 'b-btm',
  cssName: 'border-bottom',
  jsName: 'borderBottom'
};
var _borderBottomColor = {
  className: 'b-btm-clr',
  cssName: 'border-bottom-color',
  jsName: 'borderBottomColor'
};
var _borderBottomStyle = {
  className: 'b-btm-stl',
  cssName: 'border-bottom-style',
  jsName: 'borderBottomStyle',
  safeValue: true
};
var _borderBottomWidth = {
  className: 'b-btm-wdt',
  cssName: 'border-bottom-width',
  jsName: 'borderBottomWidth'
};
var propEnhancers = {
  borderBottom: function borderBottom(value) {
    return (0, _getCss.default)(_borderBottom, value);
  },
  borderBottomColor: function borderBottomColor(value) {
    return (0, _getCss.default)(_borderBottomColor, value);
  },
  borderBottomStyle: function borderBottomStyle(value) {
    return (0, _getCss.default)(_borderBottomStyle, value);
  },
  borderBottomWidth: function borderBottomWidth(value) {
    return (0, _getCss.default)(_borderBottomWidth, value);
  },
  borderLeft: function borderLeft(value) {
    return (0, _getCss.default)(_borderLeft, value);
  },
  borderLeftColor: function borderLeftColor(value) {
    return (0, _getCss.default)(_borderLeftColor, value);
  },
  borderLeftStyle: function borderLeftStyle(value) {
    return (0, _getCss.default)(_borderLeftStyle, value);
  },
  borderLeftWidth: function borderLeftWidth(value) {
    return (0, _getCss.default)(_borderLeftWidth, value);
  },
  borderRight: function borderRight(value) {
    return (0, _getCss.default)(_borderRight, value);
  },
  borderRightColor: function borderRightColor(value) {
    return (0, _getCss.default)(_borderRightColor, value);
  },
  borderRightStyle: function borderRightStyle(value) {
    return (0, _getCss.default)(_borderRightStyle, value);
  },
  borderRightWidth: function borderRightWidth(value) {
    return (0, _getCss.default)(_borderRightWidth, value);
  },
  borderTop: function borderTop(value) {
    return (0, _getCss.default)(_borderTop, value);
  },
  borderTopColor: function borderTopColor(value) {
    return (0, _getCss.default)(_borderTopColor, value);
  },
  borderTopStyle: function borderTopStyle(value) {
    return (0, _getCss.default)(_borderTopStyle, value);
  },
  borderTopWidth: function borderTopWidth(value) {
    return (0, _getCss.default)(_borderTopWidth, value);
  }
};
exports.propEnhancers = propEnhancers;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,