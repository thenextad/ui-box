"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _getCss = _interopRequireDefault(require("../get-css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  alignContent: _propTypes.default.string,
  alignItems: _propTypes.default.string,
  alignSelf: _propTypes.default.string,
  flex: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  flexBasis: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  flexDirection: _propTypes.default.string,
  flexFlow: _propTypes.default.string,
  flexGrow: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  flexShrink: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  flexWrap: _propTypes.default.string,
  justifyContent: _propTypes.default.string,
  justifyItems: _propTypes.default.string,
  justifySelf: _propTypes.default.string,
  order: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  placeContent: _propTypes.default.string,
  placeItems: _propTypes.default.string,
  placeSelf: _propTypes.default.string
};
exports.propTypes = propTypes;
var propAliases = {};
exports.propAliases = propAliases;
var propValidators = {};
exports.propValidators = propValidators;
var _flex = {
  className: 'flx',
  cssName: 'flex',
  jsName: 'flex',
  isPrefixed: true,
  defaultUnit: ''
};
var _alignItems = {
  className: 'algn-itms',
  cssName: 'align-items',
  jsName: 'alignItems',
  isPrefixed: true
};
var _alignSelf = {
  className: 'algn-slf',
  cssName: 'align-self',
  jsName: 'alignSelf',
  isPrefixed: true
};
var _alignContent = {
  className: 'algn-cnt',
  cssName: 'align-content',
  jsName: 'alignContent',
  isPrefixed: true
};
var _justifyContent = {
  className: 'just-cnt',
  cssName: 'justify-content',
  jsName: 'justifyContent',
  isPrefixed: true
};
var _justifyItems = {
  className: 'just-items',
  cssName: 'justify-items',
  jsName: 'justifyItems',
  isPrefixed: true
};
var _justifySelf = {
  className: 'just-self',
  cssName: 'justify-self',
  jsName: 'justifySelf',
  isPrefixed: true
};
var _flexDirection = {
  className: 'flx-drct',
  cssName: 'flex-direction',
  jsName: 'flexDirection',
  isPrefixed: true,
  safeValue: true
};
var _flexWrap = {
  className: 'flx-wrap',
  cssName: 'flex-wrap',
  jsName: 'flexWrap',
  isPrefixed: true,
  safeValue: true
};
var _flexGrow = {
  className: 'flx-grow',
  cssName: 'flex-grow',
  jsName: 'flexGrow',
  isPrefixed: true,
  defaultUnit: ''
};
var _flexShrink = {
  className: 'flx-srnk',
  cssName: 'flex-shrink',
  jsName: 'flexShrink',
  isPrefixed: true,
  defaultUnit: ''
};
var _flexBasis = {
  className: 'flx-basis',
  cssName: 'flex-basis',
  jsName: 'flexBasis',
  isPrefixed: true
};
var _order = {
  className: 'order',
  cssName: 'order',
  jsName: 'order',
  isPrefixed: true,
  defaultUnit: '',
  safeValue: true
};
var _flexFlow = {
  className: 'flx-flow',
  cssName: 'flex-flow',
  jsName: 'flexFlow',
  isPrefixed: true,
  defaultUnit: ''
};
var _placeContent = {
  className: 'plc-cnt',
  cssName: 'place-content',
  jsName: 'placeContent'
};
var _placeItems = {
  className: 'plc-items',
  cssName: 'place-items',
  jsName: 'placeItems'
};
var _placeSelf = {
  className: 'plc-self',
  cssName: 'place-self',
  jsName: 'placeSelf'
};
var propEnhancers = {
  alignContent: function alignContent(value) {
    return (0, _getCss.default)(_alignContent, value);
  },
  alignItems: function alignItems(value) {
    return (0, _getCss.default)(_alignItems, value);
  },
  alignSelf: function alignSelf(value) {
    return (0, _getCss.default)(_alignSelf, value);
  },
  flex: function flex(value) {
    return (0, _getCss.default)(_flex, value);
  },
  flexBasis: function flexBasis(value) {
    return (0, _getCss.default)(_flexBasis, value);
  },
  flexDirection: function flexDirection(value) {
    return (0, _getCss.default)(_flexDirection, value);
  },
  flexFlow: function flexFlow(value) {
    return (0, _getCss.default)(_flexFlow, value);
  },
  flexGrow: function flexGrow(value) {
    return (0, _getCss.default)(_flexGrow, value);
  },
  flexShrink: function flexShrink(value) {
    return (0, _getCss.default)(_flexShrink, value);
  },
  flexWrap: function flexWrap(value) {
    return (0, _getCss.default)(_flexWrap, value);
  },
  justifyContent: function justifyContent(value) {
    return (0, _getCss.default)(_justifyContent, value);
  },
  justifyItems: function justifyItems(value) {
    return (0, _getCss.default)(_justifyItems, value);
  },
  justifySelf: function justifySelf(value) {
    return (0, _getCss.default)(_justifySelf, value);
  },
  order: function order(value) {
    return (0, _getCss.default)(_order, value);
  },
  placeContent: function placeContent(value) {
    return (0, _getCss.default)(_placeContent, value);
  },
  placeItems: function placeItems(value) {
    return (0, _getCss.default)(_placeItems, value);
  },
  placeSelf: function placeSelf(value) {
    return (0, _getCss.default)(_placeSelf, value);
  }
};
exports.propEnhancers = propEnhancers;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,